spring:
  redis:
    host: localhost
    port: 6379

  rabbitmq:
    host: localhost # RabbitMQ host.
    password: guest
    port: 5672 # RabbitMQ port.
    username: guest # Login user to authenticate to the broker.

  application:
    name: order-service
#  config:
#    import: optional:configserver:http://localhost:8080

  datasource:
    username: postgres
    password: password
    url: jdbc:postgresql://localhost:5532/orderdb

  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: 'true'
    hibernate:
      ddl-auto: update
    show-sql: 'true'

#  elasticsearch:
#    uris: https://localhost:8080
#    password:

exchange:
  one: https://exchange.matraining.com/7d21b2cb-9942-4948-9699-1b9fa5a8ad1c
  two: https://exchange2.matraining.com/7d21b2cb-9942-4948-9699-1b9fa5a8ad1c
  key: 7d21b2cb-9942-4948-9699-1b9fa5a8ad1c


server:
  port: 8080

rabbitmq:
  queue:
    name: orders
    split:
      name: split_orders
  exchange:
    name: orders_exchange
  routing:
    key: orders_routing_key
    split:
      key: split_orders_routing_key



